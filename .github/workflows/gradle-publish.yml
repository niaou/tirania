name: Build, Push & Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  pr-checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      bump-type: ${{ steps.set-bump.outputs.bump }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: gradle

      - name: Check PR has release label
        id: check-label
        run: |
          echo "PR labels: ${{ toJSON(github.event.pull_request.labels) }}"
          LABELS_JSON='${{ toJSON(github.event.pull_request.labels) }}'
          if ! echo "$LABELS_JSON" | grep -qE '"name":\s*"(release:patch|release:minor|release:major)"'; then
            echo "Error: Pull request must have one of the labels: release:patch, release:minor, release:major"
            exit 1
          fi

      - name: Determine bump type from PR labels
        id: set-bump
        run: |
          BUMP=patch
          LABELS=$(echo '${{ toJSON(github.event.pull_request.labels) }}' | jq -r '.[].name')
          if echo "$LABELS" | grep -q "release:minor"; then
            BUMP=minor
          elif echo "$LABELS" | grep -q "release:major"; then
            BUMP=major
          fi
          echo "bump=$BUMP" >> $GITHUB_OUTPUT

      - name: Build and test
        run: ./gradlew clean build

      - name: Check code format
        run: ./gradlew spotlessCheck

      - name: Run SpotBugs
        run: ./gradlew spotbugsMain

      - name: Build Docker image (PR validation)
        run: docker build -t test-image .

  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
       - name: Determine release bump from merged PR
        id: bump
      run: |
        if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
          # Direct push to main → patch
          echo "BUMP=patch" >> $GITHUB_OUTPUT
        else
          # Merge from PR → read PR label
          PR_NUMBER=$(gh pr list --state merged --search "${GITHUB_SHA}" --json number -q '.[0].number')
          LABELS=$(gh pr view $PR_NUMBER --json labels -q '.labels[].name')
          if [[ "$LABELS" =~ release:major ]]; then
            echo "BUMP=major" >> $GITHUB_OUTPUT
          elif [[ "$LABELS" =~ release:minor ]]; then
            echo "BUMP=minor" >> $GITHUB_OUTPUT
          else
            echo "BUMP=patch" >> $GITHUB_OUTPUT
          fi
        fi

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Bump version and push tag
        id: bump
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: ${{ env.BUMP }}
          INITIAL_VERSION: 0.0.1

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tirania_bot:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/tirania_bot:${{ steps.bump.outputs.new_tag }}

      - name: Set next snapshot version
        run: |
          NEXT_VERSION=$(echo "${{ steps.bump.outputs.new_tag }}" | awk -F. '{printf "%d.%d.%d", $1, $2, $3+1}')
          sed -i "s/^version = .*/version = \"${NEXT_VERSION}-SNAPSHOT\"/" build.gradle
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Bump version to ${NEXT_VERSION}-SNAPSHOT [skip ci]"
          git push
